# Dense O2O
train_dataloader: 
  dataset: 
    transforms:
      ops:
        - {type: Mosaic, output_size: 320, rotation_range: 10, translation_range: [0.1, 0.1], scaling_range: [0.5, 1.5],
           probability: 1.0, fill_value: 0, use_cache: False, max_cached_images: 50, random_pop: True}
        - {type: RandomPhotometricDistort, p: 0.5}
        - {type: RandomZoomOut, fill: 0}
        - {type: RandomIoUCrop, p: 0.8}
        - {type: SanitizeBoundingBoxes, min_size: 1}
        - {type: RandomHorizontalFlip}
        - {type: Resize, size: [640, 640], }
        - {type: SanitizeBoundingBoxes, min_size: 1}
        - {type: ConvertPILImage, dtype: 'float32', scale: True}
        - {type: ConvertBoxes, fmt: 'cxcywh', normalize: True}
      policy:
        name: stop_epoch # <--- 'name' 키와 값 추가
        epoch: [4, 29, 50]   # list 
        ops: ['Mosaic', 'RandomPhotometricDistort', 'RandomZoomOut', 'RandomIoUCrop']
      mosaic_prob: 0.5

  collate_fn:
    mixup_prob: 0.5
    mixup_epochs: [4, 29]
    stop_epoch: 50    # epoch in [72, ~) stop `multiscales`

# Unfreezing BN
PResNet:
  freeze_at: -1     # default 0
  freeze_norm: False   # default True

# Activation
RTDETRTransformerv2:
  query_pos_method: as_reg
  activation: silu
  mlp_act: silu

## Our LR-Scheduler
lrsheduler: flatcosine
lr_gamma: 0.5
warmup_iter: 2000
flat_epoch: 29    # 4 + epoch // 2, e.g., 40 = 4 + 72 / 2
no_aug_epoch: 8

## Our Loss
DEIMCriterion:
  matcher: HungarianMatcher # HungarianMatcher 사용 명시
  weight_dict: {loss_ce: 1, loss_bbox: 5, loss_giou: 2} # 손실 가중치 (2D 박스 기준)
  losses: ['labels', 'boxes'] # 계산할 손실 종류
  alpha: 0.25 # Focal Loss alpha (VFL/MAL 내부에서 사용될 수 있음)
  gamma: 2.0  # Focal Loss gamma
  # num_classes는 전역 설정(byu_slice_detection.yml의 num_classes=1)을 따름
  # reg_max 등 DFL 관련 파라미터는 RT-DETR 기본값 사용, 우리가 포인트나 작은 박스를 사용하므로 영향 적을 수 있음
  # boxes_weight_format 등은 기존 2D 설정 유지
  mal_alpha: 0.8 # DEIM 논문의 MAL 관련 파라미터 (실험적으로 조절)
  # use_uni_set: True # DEIM 기본값

# HungarianMatcher 설정 (rt_deim.yml 에 정의된 것 사용 또는 여기서 오버라이드)
HungarianMatcher:
  weight_dict: {cost_class: 2, cost_bbox: 5, cost_giou: 2} # 매칭 비용 가중치 (2D 박스 기준)
  # use_focal_loss는 전역 설정을 따름